---
import BaseLayout from "@layouts/base-layout.astro";
import { siteConfig } from "@site-config";
import { getAllPosts } from "@utils/post";
import type { Post } from "@types";

export async function getStaticPaths() {
  const posts: Post[] = await getAllPosts(false, false);

  return posts.map((post: Post) => ({
    params: { slug: post.slug },
    props: { ...post },
  }));
}

const { title, publishDate, description, content, tags, featured } = Astro.props;
const formattedDate: string = new Date(publishDate).toLocaleString(siteConfig.locale, {
  dateStyle: "long",
  timeStyle: "short",
});
---

<BaseLayout
  title={`${title} Â· ${siteConfig.siteTitle}`}
  description={description}
>
  <header class="mb-8">
    <a href="/posts" class="inline-flex items-center hover:underline mb-4">
      &larr; Back to Posts
    </a>
  </header>

  <article class="prose prose-lg dark:prose-invert max-w-none">
    <header class="mb-8 not-prose">
      <h1 class="text-3xl font-bold secondary mb-4">{title}</h1>
      <div class="flex items-center gap-4 mb-4">
        <time datetime={publishDate} class="text-sm text-gray-400">
          {formattedDate}
        </time>
        {
          featured && (
            <span class="bg-green-500 text-white text-xs px-2 py-1 rounded">
              Featured
            </span>
          )
        }
      </div>
      {
        tags && tags.length > 0 && (
          <div class="flex flex-wrap gap-2 mb-6">
            {tags.map((tag: string) => (
              <span class="text-xs bg-gray-700 text-gray-300 px-2 py-1 rounded">
                {tag}
              </span>
            ))}
          </div>
        )
      }
      <p class="text-lg text-gray-300 leading-relaxed">{description}</p>
    </header>

    <div class="prose-content">
      <slot />
    </div>

    {content && <div class="mt-8 prose-content" set:html={content} />}
  </article>
</BaseLayout>

<style>
  .prose-content {
    animation: fadeIn 0.5s ease-in-out;
  }

  @keyframes fadeIn {
    from {
      opacity: 0;
      transform: translateY(10px);
    }
    to {
      opacity: 1;
      transform: translateY(0);
    }
  }
</style>
